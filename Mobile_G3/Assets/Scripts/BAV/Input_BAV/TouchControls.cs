//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Scripts/BAV/Input_BAV/TouchControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @TouchControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @TouchControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""TouchControls"",
    ""maps"": [
        {
            ""name"": ""PlayerTouchScreen"",
            ""id"": ""f3d7a794-c712-4eb1-a192-bdc97e72833d"",
            ""actions"": [
                {
                    ""name"": ""PrimaryFingerPosition"",
                    ""type"": ""Value"",
                    ""id"": ""ee8e5319-3092-4b31-a8ef-c82724582c44"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SecondaryFingerPosition"",
                    ""type"": ""Value"",
                    ""id"": ""8ebc4de6-3125-47e1-98d3-27081e5f98ec"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PrimaryTouchContact"",
                    ""type"": ""Button"",
                    ""id"": ""b0152b1d-ac1b-4d02-9c47-eb17934840bd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondaryTouchContact"",
                    ""type"": ""Button"",
                    ""id"": ""99f9e3f7-3ae1-4418-9665-3fe6385ea486"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""913be634-e67c-443b-b39d-c678b0f18b93"",
                    ""path"": ""<Touchscreen>/touch0/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryFingerPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cd643088-3d2c-46b9-b7b6-0b13c44d179a"",
                    ""path"": ""<Touchscreen>/touch2/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryFingerPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""faed296b-83bd-4f58-92d4-6f467fec3db2"",
                    ""path"": ""<Touchscreen>/touch0/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryTouchContact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""06558016-5551-4312-b632-4caf12ede148"",
                    ""path"": ""<Touchscreen>/touch1/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryTouchContact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PlayerTouchScreen
        m_PlayerTouchScreen = asset.FindActionMap("PlayerTouchScreen", throwIfNotFound: true);
        m_PlayerTouchScreen_PrimaryFingerPosition = m_PlayerTouchScreen.FindAction("PrimaryFingerPosition", throwIfNotFound: true);
        m_PlayerTouchScreen_SecondaryFingerPosition = m_PlayerTouchScreen.FindAction("SecondaryFingerPosition", throwIfNotFound: true);
        m_PlayerTouchScreen_PrimaryTouchContact = m_PlayerTouchScreen.FindAction("PrimaryTouchContact", throwIfNotFound: true);
        m_PlayerTouchScreen_SecondaryTouchContact = m_PlayerTouchScreen.FindAction("SecondaryTouchContact", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerTouchScreen
    private readonly InputActionMap m_PlayerTouchScreen;
    private IPlayerTouchScreenActions m_PlayerTouchScreenActionsCallbackInterface;
    private readonly InputAction m_PlayerTouchScreen_PrimaryFingerPosition;
    private readonly InputAction m_PlayerTouchScreen_SecondaryFingerPosition;
    private readonly InputAction m_PlayerTouchScreen_PrimaryTouchContact;
    private readonly InputAction m_PlayerTouchScreen_SecondaryTouchContact;
    public struct PlayerTouchScreenActions
    {
        private @TouchControls m_Wrapper;
        public PlayerTouchScreenActions(@TouchControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @PrimaryFingerPosition => m_Wrapper.m_PlayerTouchScreen_PrimaryFingerPosition;
        public InputAction @SecondaryFingerPosition => m_Wrapper.m_PlayerTouchScreen_SecondaryFingerPosition;
        public InputAction @PrimaryTouchContact => m_Wrapper.m_PlayerTouchScreen_PrimaryTouchContact;
        public InputAction @SecondaryTouchContact => m_Wrapper.m_PlayerTouchScreen_SecondaryTouchContact;
        public InputActionMap Get() { return m_Wrapper.m_PlayerTouchScreen; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerTouchScreenActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerTouchScreenActions instance)
        {
            if (m_Wrapper.m_PlayerTouchScreenActionsCallbackInterface != null)
            {
                @PrimaryFingerPosition.started -= m_Wrapper.m_PlayerTouchScreenActionsCallbackInterface.OnPrimaryFingerPosition;
                @PrimaryFingerPosition.performed -= m_Wrapper.m_PlayerTouchScreenActionsCallbackInterface.OnPrimaryFingerPosition;
                @PrimaryFingerPosition.canceled -= m_Wrapper.m_PlayerTouchScreenActionsCallbackInterface.OnPrimaryFingerPosition;
                @SecondaryFingerPosition.started -= m_Wrapper.m_PlayerTouchScreenActionsCallbackInterface.OnSecondaryFingerPosition;
                @SecondaryFingerPosition.performed -= m_Wrapper.m_PlayerTouchScreenActionsCallbackInterface.OnSecondaryFingerPosition;
                @SecondaryFingerPosition.canceled -= m_Wrapper.m_PlayerTouchScreenActionsCallbackInterface.OnSecondaryFingerPosition;
                @PrimaryTouchContact.started -= m_Wrapper.m_PlayerTouchScreenActionsCallbackInterface.OnPrimaryTouchContact;
                @PrimaryTouchContact.performed -= m_Wrapper.m_PlayerTouchScreenActionsCallbackInterface.OnPrimaryTouchContact;
                @PrimaryTouchContact.canceled -= m_Wrapper.m_PlayerTouchScreenActionsCallbackInterface.OnPrimaryTouchContact;
                @SecondaryTouchContact.started -= m_Wrapper.m_PlayerTouchScreenActionsCallbackInterface.OnSecondaryTouchContact;
                @SecondaryTouchContact.performed -= m_Wrapper.m_PlayerTouchScreenActionsCallbackInterface.OnSecondaryTouchContact;
                @SecondaryTouchContact.canceled -= m_Wrapper.m_PlayerTouchScreenActionsCallbackInterface.OnSecondaryTouchContact;
            }
            m_Wrapper.m_PlayerTouchScreenActionsCallbackInterface = instance;
            if (instance != null)
            {
                @PrimaryFingerPosition.started += instance.OnPrimaryFingerPosition;
                @PrimaryFingerPosition.performed += instance.OnPrimaryFingerPosition;
                @PrimaryFingerPosition.canceled += instance.OnPrimaryFingerPosition;
                @SecondaryFingerPosition.started += instance.OnSecondaryFingerPosition;
                @SecondaryFingerPosition.performed += instance.OnSecondaryFingerPosition;
                @SecondaryFingerPosition.canceled += instance.OnSecondaryFingerPosition;
                @PrimaryTouchContact.started += instance.OnPrimaryTouchContact;
                @PrimaryTouchContact.performed += instance.OnPrimaryTouchContact;
                @PrimaryTouchContact.canceled += instance.OnPrimaryTouchContact;
                @SecondaryTouchContact.started += instance.OnSecondaryTouchContact;
                @SecondaryTouchContact.performed += instance.OnSecondaryTouchContact;
                @SecondaryTouchContact.canceled += instance.OnSecondaryTouchContact;
            }
        }
    }
    public PlayerTouchScreenActions @PlayerTouchScreen => new PlayerTouchScreenActions(this);
    public interface IPlayerTouchScreenActions
    {
        void OnPrimaryFingerPosition(InputAction.CallbackContext context);
        void OnSecondaryFingerPosition(InputAction.CallbackContext context);
        void OnPrimaryTouchContact(InputAction.CallbackContext context);
        void OnSecondaryTouchContact(InputAction.CallbackContext context);
    }
}
